{
  "C:\\Users\\dator\\OneDrive\\Skrivbord\\Bonzai\\bonzai-backend-1": {
    "versionSfCore": null,
    "versionFramework": "4.3.2",
    "isWithinCompose": false,
    "isCompose": false,
    "composeOrgName": null,
    "composeResolverProviders": {
      "default-aws-credential-resolver": "<REDACTED>",
      "aws": {
        "instance": {
          "credentials": "<REDACTED>",
          "serviceConfigFile": {
            "service": "bonzai",
            "provider": {
              "name": "aws",
              "runtime": "nodejs20.x",
              "region": "eu-north-1",
              "iam": {
                "role": {
                  "statements": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "dynamodb:Query",
                        "dynamodb:Scan",
                        "dynamodb:GetItem",
                        "dynamodb:PutItem"
                      ],
                      "Resource": "arn:aws:dynamodb:eu-north-1:*:table/*"
                    }
                  ]
                }
              },
              "stage": "dev",
              "versionFunctions": true,
              "compiledCloudFormationTemplate": {
                "AWSTemplateFormatVersion": "2010-09-09",
                "Description": "The AWS CloudFormation template for this Serverless application",
                "Resources": {
                  "GetRoomsLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/bonzai-dev-getRooms"
                    }
                  },
                  "AddRoomLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/bonzai-dev-addRoom"
                    }
                  },
                  "IamRoleLambdaExecution": {
                    "Type": "AWS::IAM::Role",
                    "Properties": {
                      "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Service": [
                                "lambda.amazonaws.com"
                              ]
                            },
                            "Action": [
                              "sts:AssumeRole"
                            ]
                          }
                        ]
                      },
                      "Policies": [
                        {
                          "PolicyName": {
                            "Fn::Join": [
                              "-",
                              [
                                "bonzai",
                                "dev",
                                "lambda"
                              ]
                            ]
                          },
                          "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:CreateLogStream",
                                  "logs:CreateLogGroup",
                                  "logs:TagResource"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/bonzai-dev*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:PutLogEvents"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/bonzai-dev*:*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "dynamodb:Query",
                                  "dynamodb:Scan",
                                  "dynamodb:GetItem",
                                  "dynamodb:PutItem"
                                ],
                                "Resource": "arn:aws:dynamodb:eu-north-1:*:table/*"
                              }
                            ]
                          }
                        }
                      ],
                      "Path": "/",
                      "RoleName": {
                        "Fn::Join": [
                          "-",
                          [
                            "bonzai",
                            "dev",
                            {
                              "Ref": "AWS::Region"
                            },
                            "lambdaRole"
                          ]
                        ]
                      }
                    }
                  },
                  "GetRoomsLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-eu-north-1-3d169629-f99d",
                        "S3Key": "serverless/bonzai/dev/1726490594248-2024-09-16T12:43:14.248Z/bonzai.zip"
                      },
                      "Handler": "getRooms/index.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "bonzai-dev-getRooms",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "GetRoomsLogGroup"
                    ]
                  },
                  "AddRoomLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-eu-north-1-3d169629-f99d",
                        "S3Key": "serverless/bonzai/dev/1726490594248-2024-09-16T12:43:14.248Z/bonzai.zip"
                      },
                      "Handler": "addRoom/index.handler",
                      "Runtime": "nodejs20.x",
                      "FunctionName": "bonzai-dev-addRoom",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "AddRoomLogGroup"
                    ]
                  },
                  "GetRoomsLambdaVersionrdQF0TqsvXGqaWOD03z8Uie1blgKe6ZaJ5Rvw2EY0": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "GetRoomsLambdaFunction"
                      },
                      "CodeSha256": "ppwisoRuobTI4OKI3z4SbPLLxE4tzmm8motz43onPvM="
                    }
                  },
                  "AddRoomLambdaVersionERSFRBffTvg9C61bmyhbDEHikv6FOlGJNXc7vqJY": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "AddRoomLambdaFunction"
                      },
                      "CodeSha256": "ppwisoRuobTI4OKI3z4SbPLLxE4tzmm8motz43onPvM="
                    }
                  },
                  "HttpApi": {
                    "Type": "AWS::ApiGatewayV2::Api",
                    "Properties": {
                      "Name": "dev-bonzai",
                      "ProtocolType": "HTTP"
                    }
                  },
                  "HttpApiStage": {
                    "Type": "AWS::ApiGatewayV2::Stage",
                    "Properties": {
                      "ApiId": {
                        "Ref": "HttpApi"
                      },
                      "StageName": "$default",
                      "AutoDeploy": true,
                      "DefaultRouteSettings": {
                        "DetailedMetricsEnabled": false
                      }
                    }
                  },
                  "GetRoomsLambdaPermissionHttpApi": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "GetRoomsLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "HttpApi"
                            },
                            "/*"
                          ]
                        ]
                      }
                    }
                  },
                  "HttpApiIntegrationGetRooms": {
                    "Type": "AWS::ApiGatewayV2::Integration",
                    "Properties": {
                      "ApiId": {
                        "Ref": "HttpApi"
                      },
                      "IntegrationType": "AWS_PROXY",
                      "IntegrationUri": {
                        "Fn::GetAtt": [
                          "GetRoomsLambdaFunction",
                          "Arn"
                        ]
                      },
                      "PayloadFormatVersion": "2.0",
                      "TimeoutInMillis": 30000
                    }
                  },
                  "HttpApiRouteGetRooms": {
                    "Type": "AWS::ApiGatewayV2::Route",
                    "Properties": {
                      "ApiId": {
                        "Ref": "HttpApi"
                      },
                      "RouteKey": "GET /rooms",
                      "Target": {
                        "Fn::Join": [
                          "/",
                          [
                            "integrations",
                            {
                              "Ref": "HttpApiIntegrationGetRooms"
                            }
                          ]
                        ]
                      }
                    },
                    "DependsOn": "HttpApiIntegrationGetRooms"
                  },
                  "AddRoomLambdaPermissionHttpApi": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "AddRoomLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "HttpApi"
                            },
                            "/*"
                          ]
                        ]
                      }
                    }
                  },
                  "HttpApiIntegrationAddRoom": {
                    "Type": "AWS::ApiGatewayV2::Integration",
                    "Properties": {
                      "ApiId": {
                        "Ref": "HttpApi"
                      },
                      "IntegrationType": "AWS_PROXY",
                      "IntegrationUri": {
                        "Fn::GetAtt": [
                          "AddRoomLambdaFunction",
                          "Arn"
                        ]
                      },
                      "PayloadFormatVersion": "2.0",
                      "TimeoutInMillis": 30000
                    }
                  },
                  "HttpApiRoutePostRooms": {
                    "Type": "AWS::ApiGatewayV2::Route",
                    "Properties": {
                      "ApiId": {
                        "Ref": "HttpApi"
                      },
                      "RouteKey": "POST /rooms",
                      "Target": {
                        "Fn::Join": [
                          "/",
                          [
                            "integrations",
                            {
                              "Ref": "HttpApiIntegrationAddRoom"
                            }
                          ]
                        ]
                      }
                    },
                    "DependsOn": "HttpApiIntegrationAddRoom"
                  },
                  "rooms": {
                    "Type": "AWS::DynamoDB::Table",
                    "Properties": {
                      "TableName": "rooms",
                      "AttributeDefinitions": [
                        {
                          "AttributeName": "id",
                          "AttributeType": "S"
                        },
                        {
                          "AttributeName": "RoomType",
                          "AttributeType": "S"
                        }
                      ],
                      "KeySchema": [
                        {
                          "AttributeName": "id",
                          "KeyType": "HASH"
                        },
                        {
                          "AttributeName": "RoomType",
                          "KeyType": "RANGE"
                        }
                      ],
                      "BillingMode": "PAY_PER_REQUEST"
                    }
                  },
                  "bookings": {
                    "Type": "AWS::DynamoDB::Table",
                    "Properties": {
                      "TableName": "bookings",
                      "AttributeDefinitions": [
                        {
                          "AttributeName": "id",
                          "AttributeType": "S"
                        },
                        {
                          "AttributeName": "CustomerId",
                          "AttributeType": "S"
                        }
                      ],
                      "KeySchema": [
                        {
                          "AttributeName": "CustomerId",
                          "KeyType": "HASH"
                        },
                        {
                          "AttributeName": "id",
                          "KeyType": "RANGE"
                        }
                      ],
                      "BillingMode": "PAY_PER_REQUEST"
                    }
                  }
                },
                "Outputs": {
                  "ServerlessDeploymentBucketName": {
                    "Value": "serverless-framework-deployments-eu-north-1-3d169629-f99d",
                    "Export": {
                      "Name": "sls-bonzai-dev-ServerlessDeploymentBucketName"
                    }
                  },
                  "GetRoomsLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "GetRoomsLambdaVersionrdQF0TqsvXGqaWOD03z8Uie1blgKe6ZaJ5Rvw2EY0"
                    },
                    "Export": {
                      "Name": "sls-bonzai-dev-GetRoomsLambdaFunctionQualifiedArn"
                    }
                  },
                  "AddRoomLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "AddRoomLambdaVersionERSFRBffTvg9C61bmyhbDEHikv6FOlGJNXc7vqJY"
                    },
                    "Export": {
                      "Name": "sls-bonzai-dev-AddRoomLambdaFunctionQualifiedArn"
                    }
                  },
                  "HttpApiId": {
                    "Description": "Id of the HTTP API",
                    "Value": {
                      "Ref": "HttpApi"
                    },
                    "Export": {
                      "Name": "sls-bonzai-dev-HttpApiId"
                    }
                  },
                  "HttpApiUrl": {
                    "Description": "URL of the HTTP API",
                    "Value": {
                      "Fn::Join": [
                        "",
                        [
                          "https://",
                          {
                            "Ref": "HttpApi"
                          },
                          ".execute-api.",
                          {
                            "Ref": "AWS::Region"
                          },
                          ".",
                          {
                            "Ref": "AWS::URLSuffix"
                          }
                        ]
                      ]
                    },
                    "Export": {
                      "Name": "sls-bonzai-dev-HttpApiUrl"
                    }
                  }
                }
              },
              "vpc": {}
            },
            "functions": {
              "getRooms": {
                "handler": "getRooms/index.handler",
                "events": [
                  {
                    "httpApi": {
                      "path": "/rooms",
                      "method": "get"
                    },
                    "resolvedMethod": "GET",
                    "resolvedPath": "/rooms"
                  }
                ],
                "name": "bonzai-dev-getRooms",
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "GetRoomsLambdaVersionrdQF0TqsvXGqaWOD03z8Uie1blgKe6ZaJ5Rvw2EY0"
              },
              "addRoom": {
                "handler": "addRoom/index.handler",
                "events": [
                  {
                    "httpApi": {
                      "path": "/rooms",
                      "method": "post"
                    },
                    "resolvedMethod": "POST",
                    "resolvedPath": "/rooms"
                  }
                ],
                "name": "bonzai-dev-addRoom",
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs20.x",
                "vpc": {},
                "versionLogicalId": "AddRoomLambdaVersionERSFRBffTvg9C61bmyhbDEHikv6FOlGJNXc7vqJY"
              }
            },
            "resources": {
              "Resources": {
                "rooms": {
                  "Type": "AWS::DynamoDB::Table",
                  "Properties": {
                    "TableName": "rooms",
                    "AttributeDefinitions": [
                      {
                        "AttributeName": "id",
                        "AttributeType": "S"
                      },
                      {
                        "AttributeName": "RoomType",
                        "AttributeType": "S"
                      }
                    ],
                    "KeySchema": [
                      {
                        "AttributeName": "id",
                        "KeyType": "HASH"
                      },
                      {
                        "AttributeName": "RoomType",
                        "KeyType": "RANGE"
                      }
                    ],
                    "BillingMode": "PAY_PER_REQUEST"
                  }
                },
                "bookings": {
                  "Type": "AWS::DynamoDB::Table",
                  "Properties": {
                    "TableName": "bookings",
                    "AttributeDefinitions": [
                      {
                        "AttributeName": "id",
                        "AttributeType": "S"
                      },
                      {
                        "AttributeName": "CustomerId",
                        "AttributeType": "S"
                      }
                    ],
                    "KeySchema": [
                      {
                        "AttributeName": "CustomerId",
                        "KeyType": "HASH"
                      },
                      {
                        "AttributeName": "id",
                        "KeyType": "RANGE"
                      }
                    ],
                    "BillingMode": "PAY_PER_REQUEST"
                  }
                }
              },
              "Outputs": {}
            }
          },
          "configFileDirPath": "C:\\Users\\dator\\OneDrive\\Skrivbord\\Bonzai\\bonzai-backend-1",
          "config": {
            "type": "aws"
          },
          "options": {},
          "stage": "dev",
          "dashboard": null,
          "logger": {
            "namespace": "s:core:resolver:aws",
            "prefix": null,
            "prefixColor": null
          },
          "_credentialsPromise": "<REDACTED>",
          "isDefaultConfig": true
        },
        "resolvers": {}
      }
    },
    "composeServiceName": null,
    "servicePath": "C:\\Users\\dator\\OneDrive\\Skrivbord\\Bonzai\\bonzai-backend-1",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "service": "bonzai",
      "provider": {
        "name": "aws",
        "runtime": "nodejs20.x",
        "region": "eu-north-1",
        "iam": {
          "role": {
            "statements": [
              {
                "Effect": "Allow",
                "Action": [
                  "dynamodb:Query",
                  "dynamodb:Scan",
                  "dynamodb:GetItem",
                  "dynamodb:PutItem"
                ],
                "Resource": "arn:aws:dynamodb:eu-north-1:*:table/*"
              }
            ]
          }
        },
        "stage": "dev",
        "versionFunctions": true,
        "compiledCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "GetRoomsLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/bonzai-dev-getRooms"
              }
            },
            "AddRoomLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/bonzai-dev-addRoom"
              }
            },
            "IamRoleLambdaExecution": {
              "Type": "AWS::IAM::Role",
              "Properties": {
                "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": [
                          "lambda.amazonaws.com"
                        ]
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "Policies": [
                  {
                    "PolicyName": {
                      "Fn::Join": [
                        "-",
                        [
                          "bonzai",
                          "dev",
                          "lambda"
                        ]
                      ]
                    },
                    "PolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup",
                            "logs:TagResource"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/bonzai-dev*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:PutLogEvents"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/bonzai-dev*:*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "dynamodb:Query",
                            "dynamodb:Scan",
                            "dynamodb:GetItem",
                            "dynamodb:PutItem"
                          ],
                          "Resource": "arn:aws:dynamodb:eu-north-1:*:table/*"
                        }
                      ]
                    }
                  }
                ],
                "Path": "/",
                "RoleName": {
                  "Fn::Join": [
                    "-",
                    [
                      "bonzai",
                      "dev",
                      {
                        "Ref": "AWS::Region"
                      },
                      "lambdaRole"
                    ]
                  ]
                }
              }
            },
            "GetRoomsLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-eu-north-1-3d169629-f99d",
                  "S3Key": "serverless/bonzai/dev/1726490594248-2024-09-16T12:43:14.248Z/bonzai.zip"
                },
                "Handler": "getRooms/index.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "bonzai-dev-getRooms",
                "MemorySize": 1024,
                "Timeout": 6,
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "GetRoomsLogGroup"
              ]
            },
            "AddRoomLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-eu-north-1-3d169629-f99d",
                  "S3Key": "serverless/bonzai/dev/1726490594248-2024-09-16T12:43:14.248Z/bonzai.zip"
                },
                "Handler": "addRoom/index.handler",
                "Runtime": "nodejs20.x",
                "FunctionName": "bonzai-dev-addRoom",
                "MemorySize": 1024,
                "Timeout": 6,
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "AddRoomLogGroup"
              ]
            },
            "GetRoomsLambdaVersionrdQF0TqsvXGqaWOD03z8Uie1blgKe6ZaJ5Rvw2EY0": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "GetRoomsLambdaFunction"
                },
                "CodeSha256": "ppwisoRuobTI4OKI3z4SbPLLxE4tzmm8motz43onPvM="
              }
            },
            "AddRoomLambdaVersionERSFRBffTvg9C61bmyhbDEHikv6FOlGJNXc7vqJY": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "AddRoomLambdaFunction"
                },
                "CodeSha256": "ppwisoRuobTI4OKI3z4SbPLLxE4tzmm8motz43onPvM="
              }
            },
            "HttpApi": {
              "Type": "AWS::ApiGatewayV2::Api",
              "Properties": {
                "Name": "dev-bonzai",
                "ProtocolType": "HTTP"
              }
            },
            "HttpApiStage": {
              "Type": "AWS::ApiGatewayV2::Stage",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "StageName": "$default",
                "AutoDeploy": true,
                "DefaultRouteSettings": {
                  "DetailedMetricsEnabled": false
                }
              }
            },
            "GetRoomsLambdaPermissionHttpApi": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "GetRoomsLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "HttpApi"
                      },
                      "/*"
                    ]
                  ]
                }
              }
            },
            "HttpApiIntegrationGetRooms": {
              "Type": "AWS::ApiGatewayV2::Integration",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "IntegrationType": "AWS_PROXY",
                "IntegrationUri": {
                  "Fn::GetAtt": [
                    "GetRoomsLambdaFunction",
                    "Arn"
                  ]
                },
                "PayloadFormatVersion": "2.0",
                "TimeoutInMillis": 30000
              }
            },
            "HttpApiRouteGetRooms": {
              "Type": "AWS::ApiGatewayV2::Route",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "RouteKey": "GET /rooms",
                "Target": {
                  "Fn::Join": [
                    "/",
                    [
                      "integrations",
                      {
                        "Ref": "HttpApiIntegrationGetRooms"
                      }
                    ]
                  ]
                }
              },
              "DependsOn": "HttpApiIntegrationGetRooms"
            },
            "AddRoomLambdaPermissionHttpApi": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "AddRoomLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "HttpApi"
                      },
                      "/*"
                    ]
                  ]
                }
              }
            },
            "HttpApiIntegrationAddRoom": {
              "Type": "AWS::ApiGatewayV2::Integration",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "IntegrationType": "AWS_PROXY",
                "IntegrationUri": {
                  "Fn::GetAtt": [
                    "AddRoomLambdaFunction",
                    "Arn"
                  ]
                },
                "PayloadFormatVersion": "2.0",
                "TimeoutInMillis": 30000
              }
            },
            "HttpApiRoutePostRooms": {
              "Type": "AWS::ApiGatewayV2::Route",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "RouteKey": "POST /rooms",
                "Target": {
                  "Fn::Join": [
                    "/",
                    [
                      "integrations",
                      {
                        "Ref": "HttpApiIntegrationAddRoom"
                      }
                    ]
                  ]
                }
              },
              "DependsOn": "HttpApiIntegrationAddRoom"
            },
            "rooms": {
              "Type": "AWS::DynamoDB::Table",
              "Properties": {
                "TableName": "rooms",
                "AttributeDefinitions": [
                  {
                    "AttributeName": "id",
                    "AttributeType": "S"
                  },
                  {
                    "AttributeName": "RoomType",
                    "AttributeType": "S"
                  }
                ],
                "KeySchema": [
                  {
                    "AttributeName": "id",
                    "KeyType": "HASH"
                  },
                  {
                    "AttributeName": "RoomType",
                    "KeyType": "RANGE"
                  }
                ],
                "BillingMode": "PAY_PER_REQUEST"
              }
            },
            "bookings": {
              "Type": "AWS::DynamoDB::Table",
              "Properties": {
                "TableName": "bookings",
                "AttributeDefinitions": [
                  {
                    "AttributeName": "id",
                    "AttributeType": "S"
                  },
                  {
                    "AttributeName": "CustomerId",
                    "AttributeType": "S"
                  }
                ],
                "KeySchema": [
                  {
                    "AttributeName": "CustomerId",
                    "KeyType": "HASH"
                  },
                  {
                    "AttributeName": "id",
                    "KeyType": "RANGE"
                  }
                ],
                "BillingMode": "PAY_PER_REQUEST"
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": "serverless-framework-deployments-eu-north-1-3d169629-f99d",
              "Export": {
                "Name": "sls-bonzai-dev-ServerlessDeploymentBucketName"
              }
            },
            "GetRoomsLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "GetRoomsLambdaVersionrdQF0TqsvXGqaWOD03z8Uie1blgKe6ZaJ5Rvw2EY0"
              },
              "Export": {
                "Name": "sls-bonzai-dev-GetRoomsLambdaFunctionQualifiedArn"
              }
            },
            "AddRoomLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "AddRoomLambdaVersionERSFRBffTvg9C61bmyhbDEHikv6FOlGJNXc7vqJY"
              },
              "Export": {
                "Name": "sls-bonzai-dev-AddRoomLambdaFunctionQualifiedArn"
              }
            },
            "HttpApiId": {
              "Description": "Id of the HTTP API",
              "Value": {
                "Ref": "HttpApi"
              },
              "Export": {
                "Name": "sls-bonzai-dev-HttpApiId"
              }
            },
            "HttpApiUrl": {
              "Description": "URL of the HTTP API",
              "Value": {
                "Fn::Join": [
                  "",
                  [
                    "https://",
                    {
                      "Ref": "HttpApi"
                    },
                    ".execute-api.",
                    {
                      "Ref": "AWS::Region"
                    },
                    ".",
                    {
                      "Ref": "AWS::URLSuffix"
                    }
                  ]
                ]
              },
              "Export": {
                "Name": "sls-bonzai-dev-HttpApiUrl"
              }
            }
          }
        },
        "vpc": {}
      },
      "functions": {
        "getRooms": {
          "handler": "getRooms/index.handler",
          "events": [
            {
              "httpApi": {
                "path": "/rooms",
                "method": "get"
              },
              "resolvedMethod": "GET",
              "resolvedPath": "/rooms"
            }
          ],
          "name": "bonzai-dev-getRooms",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "GetRoomsLambdaVersionrdQF0TqsvXGqaWOD03z8Uie1blgKe6ZaJ5Rvw2EY0"
        },
        "addRoom": {
          "handler": "addRoom/index.handler",
          "events": [
            {
              "httpApi": {
                "path": "/rooms",
                "method": "post"
              },
              "resolvedMethod": "POST",
              "resolvedPath": "/rooms"
            }
          ],
          "name": "bonzai-dev-addRoom",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "AddRoomLambdaVersionERSFRBffTvg9C61bmyhbDEHikv6FOlGJNXc7vqJY"
        }
      },
      "resources": {
        "Resources": {
          "rooms": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "rooms",
              "AttributeDefinitions": [
                {
                  "AttributeName": "id",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "RoomType",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "id",
                  "KeyType": "HASH"
                },
                {
                  "AttributeName": "RoomType",
                  "KeyType": "RANGE"
                }
              ],
              "BillingMode": "PAY_PER_REQUEST"
            }
          },
          "bookings": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "bookings",
              "AttributeDefinitions": [
                {
                  "AttributeName": "id",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "CustomerId",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "CustomerId",
                  "KeyType": "HASH"
                },
                {
                  "AttributeName": "id",
                  "KeyType": "RANGE"
                }
              ],
              "BillingMode": "PAY_PER_REQUEST"
            }
          }
        },
        "Outputs": {}
      }
    },
    "serviceRawFile": "# \"org\" ensures this Service is used with the correct Serverless Framework Access Key.\r\n# org: js2023\r\n# \"service\" is the name of this project. This will also be added to your AWS resource names.\r\nservice: bonzai\r\n\r\n\r\nprovider:\r\n  name: aws\r\n  runtime: nodejs20.x\r\n  region: eu-north-1\r\n  iam:\r\n    role:\r\n      statements:\r\n        - Effect: Allow\r\n          Action:\r\n            - dynamodb:Query\r\n            - dynamodb:Scan\r\n            - dynamodb:GetItem\r\n            - dynamodb:PutItem\r\n          Resource: arn:aws:dynamodb:${aws:region}:*:table/*\r\n\r\nfunctions:\r\n  getRooms:\r\n    handler: getRooms/index.handler\r\n    events:\r\n      - httpApi:\r\n          path: /rooms\r\n          method: get\r\n\r\n  addRoom:\r\n    handler: addRoom/index.handler\r\n    events:\r\n      - httpApi:\r\n          path: /rooms\r\n          method: post\r\n\r\nresources:\r\n  Resources:\r\n    rooms:\r\n      Type: AWS::DynamoDB::Table\r\n      Properties:\r\n        TableName: rooms\r\n        AttributeDefinitions:\r\n          - AttributeName: id\r\n            AttributeType: S\r\n          - AttributeName: RoomType\r\n            AttributeType: S\r\n        KeySchema:\r\n          - AttributeName: id\r\n            KeyType: HASH\r\n          - AttributeName: RoomType\r\n            KeyType: RANGE\r\n        BillingMode: PAY_PER_REQUEST\r\n\r\n    bookings:\r\n      Type: AWS::DynamoDB::Table\r\n      Properties:\r\n        TableName: bookings\r\n        AttributeDefinitions:\r\n          - AttributeName: id\r\n            AttributeType: S\r\n          - AttributeName: CustomerId\r\n            AttributeType: S\r\n        KeySchema:\r\n          - AttributeName: CustomerId\r\n            KeyType: HASH\r\n          - AttributeName: id\r\n            KeyType: RANGE\r\n        BillingMode: PAY_PER_REQUEST\r\n",
    "command": [
      "deploy"
    ],
    "options": {},
    "error": null,
    "params": {},
    "machineId": "7c7777551fadac7e236a8b80df491166",
    "stage": "dev",
    "accessKeyV2": "<REDACTED>",
    "accessKeyV1": "<REDACTED>",
    "orgId": "22ef86e7-c736-4e9a-b3ab-223376e51322",
    "orgName": "ahmedabbas",
    "userId": "lRsVzwLxQZPgX9KRRb",
    "dashboard": {
      "isEnabledForService": false,
      "requiredAuthentication": false,
      "orgFeaturesInUse": null,
      "orgObservabilityIntegrations": null,
      "serviceAppId": null,
      "serviceProvider": null,
      "instanceParameters": null
    },
    "userName": "ahmedabbas",
    "subscription": null,
    "userEmail": "ahmed2004a2@gmail.com",
    "serviceProviderAwsRegion": "eu-north-1",
    "serviceProviderAwsCredentials": "<REDACTED>",
    "serviceProviderAwsAccountId": "288761744319",
    "projectType": "traditional",
    "versionSf": "4.3.2",
    "serviceProviderAwsCfStackName": "bonzai-dev",
    "integrations": {},
    "serviceUniqueId": "arn:aws:cloudformation:eu-north-1:288761744319:stack/bonzai-dev/42405c10-7429-11ef-8e05-0a589db52b2f",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:eu-north-1:288761744319:stack/bonzai-dev/42405c10-7429-11ef-8e05-0a589db52b2f",
    "serviceProviderAwsCfStackCreated": "2024-09-16T12:43:23.052Z",
    "serviceProviderAwsCfStackUpdated": null,
    "serviceProviderAwsCfStackStatus": "CREATE_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "AddRoomLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:eu-north-1:288761744319:function:bonzai-dev-addRoom:1",
        "Description": "Current Lambda function version",
        "ExportName": "sls-bonzai-dev-AddRoomLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "GetRoomsLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:eu-north-1:288761744319:function:bonzai-dev-getRooms:1",
        "Description": "Current Lambda function version",
        "ExportName": "sls-bonzai-dev-GetRoomsLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "HttpApiId",
        "OutputValue": "o9j14vok0e",
        "Description": "Id of the HTTP API",
        "ExportName": "sls-bonzai-dev-HttpApiId"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "serverless-framework-deployments-eu-north-1-3d169629-f99d",
        "ExportName": "sls-bonzai-dev-ServerlessDeploymentBucketName"
      },
      {
        "OutputKey": "HttpApiUrl",
        "OutputValue": "https://o9j14vok0e.execute-api.eu-north-1.amazonaws.com",
        "Description": "URL of the HTTP API",
        "ExportName": "sls-bonzai-dev-HttpApiUrl"
      }
    ]
  }
}